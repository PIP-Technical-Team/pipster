% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipgd_dist.R
\name{pipgd_mld}
\alias{pipgd_mld}
\title{Compute MLD}
\usage{
pipgd_mld(
  params = NULL,
  welfare = NULL,
  weight = NULL,
  mean = 1,
  times_mean = 1,
  popshare = NULL,
  povline = ifelse(is.null(popshare), mean * times_mean, NA_real_),
  complete = getOption("pipster.return_complete"),
  lorenz = NULL
)
}
\arguments{
\item{params}{list of parameters from \code{pipgd_validate_lorenz()}}

\item{welfare}{numeric vector of cumulative share of welfare (income/consumption)}

\item{weight}{numeric vector of cumulative share of the population}

\item{mean}{numeric scalar of distribution mean. Default is 1}

\item{times_mean}{numeric factor that multiplies the mean to create a
relative povertyline. Default is 1}

\item{popshare}{numeric: range (0,1). Share of population. Provide share of
population instead of poverty line}

\item{povline}{numeric: value of poverty line. Default is the \code{mean} value}

\item{complete}{logical: If TRUE, returns a list a cumulative returns from
previously used \code{get_gd} functions. Default is \code{FALSE}}

\item{lorenz}{character or NULL. Lorenz curve selected. It could be "lq" for
Lorenz Quadratic or "lb" for Lorenz Beta}
}
\value{
list: contains numeric MLD and, if \code{complete=TRUE},
also returns all params.
}
\description{
MLD is computed using either the beta or quadratic Lorenz
functions.
}
\examples{
pipgd_mld(welfare = pip_gd$L,
          weight  = pip_gd$P)
}
