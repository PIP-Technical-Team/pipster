% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipmd_dist.R
\name{pipmd_quantile_welfare_share}
\alias{pipmd_quantile_welfare_share}
\title{Quantile welfare share}
\usage{
pipmd_quantile_welfare_share(
  pipster_object = NULL,
  welfare,
  weight = rep(1, length = length(welfare)),
  n = 10,
  popshare = seq(from = 1/n, to = 1, by = 1/n),
  format = c("dt", "list", "atomic")
)
}
\arguments{
\item{pipster_object}{pipster object created using \link{create_pipster_object}}

\item{welfare}{welfare vector}

\item{weight}{population weight vector}

\item{n}{numeric: number of equi-spaced quantiles}

\item{popshare}{numeric atomic vector: the quantiles to return. Will only be
used if \code{n = NULL}}

\item{format}{character: "dt", "list", "atomic", giving the format of the
output}
}
\value{
Returns a \code{data.table} and \code{data.frame} object with two variables:
\code{quantile} and \code{share_at}.  Check \code{format} argument to change the output format.
}
\description{
\code{pipmd_quantile_welfare_share} returns the share of welfare held by a
particular quantile. Notice that \code{pipmd_welfare_share_at} get the share of
welfare held by a particular share of the population, which is in a sense
the cumulative share. Instead, \code{pipmd_quantile_welfare_share} returns
the proportion of welfare that only the specified quantile holds.
}
\examples{
# Example 1: Basic usage with default quantiles (10)
pipmd_quantile_welfare_share(welfare = pip_md_s$welfare,
                             weight = pip_md_s$weight)

# Example 2: Specifying a different number of quantiles
pipmd_quantile_welfare_share(welfare = pip_md_s$welfare,
                             weight = pip_md_s$weight,
                             n = 5,  # For quintiles
                             format = "list")

# Example 3: Using specific population shares
specific_popshares <- seq(from = 0.1, to = 1, by = 0.1)  # Deciles
pipmd_quantile_welfare_share(welfare = pip_md_s$welfare,
                             weight = pip_md_s$weight,
                             popshare = specific_popshares,
                             format = "dt")
rm(specific_popshares)

# Example 4: Returning atomic format
pipmd_quantile_welfare_share(welfare = pip_md_s$welfare,
                             weight = pip_md_s$weight,
                             n = 4,  # For quartiles
                             format = "atomic")

}
