% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipgd_lorenz.R
\name{pipgd_lorenz_curve}
\alias{pipgd_lorenz_curve}
\title{Lorenz curve}
\usage{
pipgd_lorenz_curve(
  params = NULL,
  welfare = NULL,
  weight = NULL,
  mean = 1,
  times_mean = 1,
  popshare = NULL,
  povline = ifelse(is.null(popshare), mean * times_mean, NA_real_),
  complete = getOption("pipster.return_complete"),
  lorenz = NULL,
  n_bins = 100
)
}
\arguments{
\item{params}{list of parameters from \code{pipgd_validate_lorenz()}}

\item{welfare}{numeric vector of cumulative share of welfare (income/consumption)}

\item{weight}{numeric vector of cumulative share of the population}

\item{mean}{numeric scalar of distribution mean. Default is 1}

\item{times_mean}{numeric factor that multiplies the mean to create a
relative poverty line. Default is 1}

\item{popshare}{numeric: range (0,1). Share of population. Provide share of
population instead of poverty line}

\item{povline}{numeric: value of poverty line. Default is the \code{mean} value}

\item{complete}{logical: If TRUE, returns a list a cumulative returns from
previously used \code{get_gd} functions. Default is \code{FALSE}}

\item{lorenz}{character or NULL. Lorenz curve selected. It could be "lq" for
Lorenz Quadratic or "lb" for Lorenz Beta}

\item{n_bins}{atomic double vector of length 1: number of points on the
lorenz curve}
}
\value{
Returns a list: contains i) numeric lorenz curve, ii) corresponding
points on x-axis, iii) whether lq or lb parameterization, and
iv) if \code{complete=TRUE}, also returns all params.
}
\description{
Returns the Lorenz curve. User provides the cumulative welfare and
cumulative weight, as well as the number of points on the lorenz curve required.
By default, the best fitting Lorenz parameterization (quadratic or beta) is
selected.
}
\examples{
# Example 1: Generating a Lorenz Curve with default settings
lorenz_curve_default <- pipgd_lorenz_curve(welfare = pip_gd$L,
                                           weight = pip_gd$P)

# Example 2: Specifying the number of bins for the Lorenz Curve
lorenz_curve_bins <- pipgd_lorenz_curve(welfare = pip_gd$L,
                                        weight = pip_gd$P,
                                        n_bins = 50)

# Example 3: Using pre-calculated parameters
params <- pipgd_validate_lorenz(welfare = pip_gd$L,
                                weight = pip_gd$P)

lorenz_curve_params <- pipgd_lorenz_curve(params = params)

# Example 4: Generating Lorenz Curve with a specific Lorenz model
lorenz_curve_lq <- pipgd_lorenz_curve(params = params, lorenz = "lq")
lorenz_curve_lb <- pipgd_lorenz_curve(params = params, lorenz = "lb")

}
