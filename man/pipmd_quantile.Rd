% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipmd_dist.R
\name{pipmd_quantile}
\alias{pipmd_quantile}
\title{Get quantile at specified shared of population - micro data}
\usage{
pipmd_quantile(
  welfare = NULL,
  weight = NULL,
  n = 10,
  popshare = seq(from = 1/n, to = 1, by = 1/n),
  format = c("dt", "list", "atomic")
)
}
\arguments{
\item{welfare}{welfare vector}

\item{weight}{population weight vector}

\item{n}{numeric: number of equi-spaced quantiles}

\item{popshare}{numeric atomic vector: the quantiles to return. Will only be
used if \code{n = NULL}}

\item{format}{character: "dt", "list", "atomic", giving the format of the
output}
}
\value{
Returns a \code{data.table} and \code{data.frame} object with two variables:
\code{quantile} and \code{value}.  Check \code{format} argument to change the output format.
}
\description{
\code{pipmd_quantile} returns the quantile (i.e., monetary value) that corresponds
to share of the population that lives below that threshold.
}
\details{
This is basically the inverse of estimating the poverty rate (headcount or
population share) below the poverty line. In this case, you provide the
headcount and \code{pipmd_quantile} returns the "poverty line".

The quantiles are calculated as function of the mean of the distribution
times an \code{x} factor. Basically, the quantile is \code{x} times the mean. By
default, the mean is equal to 1, which implies that, if no mean value if
provided, the return value is equal to \code{x}.
}
\examples{
# Example 1: Calculating quintiles.
pipmd_quantile(welfare = pip_md_s$welfare,
               weight  = pip_md_s$weight,
               n       = 5,
               format  = "list")

# Example 2: Calculating deciles with data.table format.
pipmd_quantile(welfare = pip_md_s$welfare,
               weight  = pip_md_s$weight,
               n       = 10,
               format  = "dt")

# Example 3: Calculating quantiles at specific population shares and format
atomic.
specific_popshares <- seq(from = 0, to = 1, length.out = 100)
pipmd_quantile(welfare = pip_md_s$welfare,
               weight  = pip_md_s$weight,
               popshare = specific_popshares,
               format  = "atomic")

}
