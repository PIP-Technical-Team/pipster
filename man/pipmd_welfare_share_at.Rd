% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipmd_dist.R
\name{pipmd_welfare_share_at}
\alias{pipmd_welfare_share_at}
\title{Welfare share by quantile in micro data}
\usage{
pipmd_welfare_share_at(
  welfare,
  weight = rep(1, length = length(welfare)),
  n = 10,
  popshare = seq(from = 1/n, to = 1, by = 1/n),
  format = c("dt", "list", "atomic")
)
}
\arguments{
\item{welfare}{welfare vector}

\item{weight}{population weight vector}

\item{n}{numeric: number of equi-spaced quantiles}

\item{popshare}{numeric atomic vector: the quantiles to return. Will only be
used if \code{n = NULL}}

\item{format}{character: "dt", "list", "atomic", giving the format of the
output}
}
\value{
Returns a \code{data.table} and \code{data.frame} object with two variables:
\code{quantile} and \code{share_at}.  Check \code{format} argument to change the output format.
}
\description{
\code{pipmd_welfare_share_at} returns the share of welfare held by the specified
share of the population in the parameter \code{popshare}. Alternatively, you can
select the number of quantiles (10 be default), to estimate the corresponding
share of welfare in each.
}
\examples{
# Example 1: Basic usage with default quantiles (10)
pipmd_welfare_share_at(welfare = pip_md_s$welfare,
                       weight = pip_md_s$weight)

# Example 2: Specifying a different number of quantiles
pipmd_welfare_share_at(welfare = pip_md_s$welfare,
                       weight = pip_md_s$weight,
                       n = 5,  # For quintiles
                       format = "list")

# Example 3: Using specific population shares
specific_popshares <- seq(from = 0.1, to = 1, by = 0.1)  # Deciles
pipmd_welfare_share_at(welfare = pip_md_s$welfare,
                       weight = pip_md_s$weight,
                       popshare = specific_popshares,
                       format = "dt")

# Example 4: Returning atomic format
pipmd_welfare_share_at(welfare = pip_md_s$welfare,
                       weight = pip_md_s$weight,
                       n = 4,  # For quartiles
                       format = "atomic")

}
